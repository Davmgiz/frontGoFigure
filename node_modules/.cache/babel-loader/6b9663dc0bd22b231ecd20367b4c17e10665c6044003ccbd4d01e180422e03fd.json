{"ast":null,"code":"var _jsxFileName = \"D:\\\\mnist\\\\src\\\\components\\\\Drawer.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from \"react\";\nimport { Pixel, WHITE_VALUE, BLACK_VALUE } from \"./Pixel\";\nimport Pred from \"./Pred\";\nimport \"./styles/Drawer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drawer() {\n  _s();\n  const rows = 28;\n  const columns = 28;\n  let firstPixelsValues = [];\n  for (let i = 0; i < rows * columns; i++) {\n    firstPixelsValues.push({\n      value: WHITE_VALUE\n    });\n  }\n  const [pixels, setPixels] = useState(firstPixelsValues);\n  const [countBlack, setCountBlack] = useState(0);\n  const [isLeftDrawing, setIsLeftDrawing] = useState(false);\n  const [isRightDrawing, setIsRightDrawing] = useState(false);\n  function MouseDown(event) {\n    switch (event.button) {\n      case 0:\n        console.log('Нажата левая кнопка мыши');\n        setIsLeftDrawing(true);\n        setIsRightDrawing(false);\n        break;\n      case 2:\n        console.log('Нажата правая кнопка мыши');\n        setIsLeftDrawing(false);\n        setIsRightDrawing(true);\n        event.preventDefault();\n        break;\n      default:\n    }\n  }\n  function MouseUp(event) {\n    switch (event.button) {\n      case 0:\n        console.log('Отпущена левая кнопка мыши');\n        setIsLeftDrawing(false);\n        setIsRightDrawing(false);\n        break;\n      case 2:\n        console.log('Отпущена правая кнопка мыши');\n        setIsLeftDrawing(false);\n        setIsRightDrawing(false);\n        event.preventDefault();\n        break;\n      default:\n    }\n  }\n  function updatePixels(index, value) {\n    const updatedPixels = [...pixels];\n    updatedPixels[index] = {\n      value: value\n    };\n    setPixels(updatedPixels);\n  }\n  useEffect(() => {\n    if (countBlack != 0) {\n      console.log(pixels);\n    }\n  }, [pixels]);\n  function clearScreen() {\n    setPixels(pixels.map(pixel => ({\n      value: WHITE_VALUE\n    })));\n    setCountBlack(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Drawer\",\n    children: [/*#__PURE__*/_jsxDEV(Pred, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DrawArea\",\n      onMouseDown: MouseDown,\n      onMouseLeave: MouseDown,\n      onMouseUp: MouseUp,\n      children: pixels.map((el, i) => /*#__PURE__*/_jsxDEV(Pixel, {\n        ind: i,\n        value: el.value,\n        onUpdate: updatePixels,\n        isLeftDrawing: isLeftDrawing,\n        isRightDrawing: isRightDrawing,\n        setCntBlack: setCountBlack,\n        cntBlack: countBlack\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Clear\",\n      onClick: clearScreen,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Drawer, \"LltDxT+fzh7t7sz/mpcdA1lHn4g=\");\n_c = Drawer;\nexport default Drawer;\nvar _c;\n$RefreshReg$(_c, \"Drawer\");","map":{"version":3,"names":["React","useState","useEffect","Pixel","WHITE_VALUE","BLACK_VALUE","Pred","jsxDEV","_jsxDEV","Drawer","_s","rows","columns","firstPixelsValues","i","push","value","pixels","setPixels","countBlack","setCountBlack","isLeftDrawing","setIsLeftDrawing","isRightDrawing","setIsRightDrawing","MouseDown","event","button","console","log","preventDefault","MouseUp","updatePixels","index","updatedPixels","clearScreen","map","pixel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseLeave","onMouseUp","el","ind","onUpdate","setCntBlack","cntBlack","onClick","_c","$RefreshReg$"],"sources":["D:/mnist/src/components/Drawer.jsx"],"sourcesContent":["import {React, useState, useEffect} from \"react\";\r\nimport {Pixel, WHITE_VALUE, BLACK_VALUE}  from \"./Pixel\";\r\nimport Pred from \"./Pred\";\r\nimport \"./styles/Drawer.css\"\r\n\r\nfunction Drawer() {\r\n  const rows = 28;\r\n  const columns = 28;\r\n\r\n  let firstPixelsValues = [];\r\n  for (let i = 0; i < rows * columns; i++){\r\n    firstPixelsValues.push({value: WHITE_VALUE});\r\n  }\r\n\r\n  const [pixels, setPixels] = useState(firstPixelsValues);\r\n\r\n  const [countBlack, setCountBlack] = useState(0);\r\n\r\n  const [isLeftDrawing, setIsLeftDrawing] = useState(false);\r\n  const [isRightDrawing, setIsRightDrawing] = useState(false);\r\n\r\n  function MouseDown(event){\r\n    switch (event.button) {\r\n      case 0:\r\n        console.log('Нажата левая кнопка мыши');\r\n\r\n        setIsLeftDrawing(true);\r\n        setIsRightDrawing(false);\r\n        break;\r\n      case 2:\r\n        console.log('Нажата правая кнопка мыши');\r\n\r\n        setIsLeftDrawing(false);\r\n        setIsRightDrawing(true);\r\n\r\n        event.preventDefault();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  function MouseUp(event){\r\n    switch (event.button) {\r\n      case 0:\r\n        console.log('Отпущена левая кнопка мыши');\r\n\r\n        setIsLeftDrawing(false);\r\n        setIsRightDrawing(false);\r\n        break;\r\n      case 2:\r\n        console.log('Отпущена правая кнопка мыши');\r\n\r\n        setIsLeftDrawing(false);\r\n        setIsRightDrawing(false);\r\n\r\n        event.preventDefault();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n\r\n  function updatePixels(index, value){\r\n    const updatedPixels = [...pixels];\r\n    updatedPixels[index] = {value: value};\r\n    setPixels(updatedPixels);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (countBlack != 0){\r\n      console.log(pixels);\r\n    }\r\n  \r\n  }, [pixels]);\r\n\r\n  function clearScreen() {\r\n    setPixels(pixels.map(pixel => ({ value: WHITE_VALUE })));\r\n    setCountBlack(0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Drawer\">\r\n      <Pred />\r\n      <div className=\"DrawArea\"  onMouseDown={MouseDown} onMouseLeave={MouseDown} onMouseUp={MouseUp}>\r\n        {pixels.map((el, i) => (\r\n          <Pixel \r\n          key={i} \r\n          ind={i} \r\n          value={el.value} \r\n          onUpdate={updatePixels}\r\n          isLeftDrawing={isLeftDrawing}\r\n          isRightDrawing={isRightDrawing}\r\n          setCntBlack={setCountBlack}\r\n          cntBlack={countBlack}\r\n        />\r\n      ))}\r\n      </div>\r\n      <button className=\"Clear\" onClick={clearScreen}>Clear</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Drawer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}